// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.12.4
// source: movie/v1/movie_service.proto

package moviev1

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var File_movie_v1_movie_service_proto protoreflect.FileDescriptor

var file_movie_v1_movie_service_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6f, 0x76, 0x69, 0x65,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10,
	0x72, 0x6f, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x2e, 0x76, 0x31,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d,
	0x6d, 0x6f, 0x76, 0x69, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70,
	0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x32, 0xa6, 0x07,
	0x0a, 0x0c, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x74,
	0x0a, 0x05, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x24, 0x2e, 0x72, 0x6f, 0x6b, 0x65, 0x74, 0x69,
	0x6e, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e,
	0x72, 0x6f, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x2f, 0x68, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x7a, 0x12, 0x9d, 0x01, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d,
	0x6f, 0x76, 0x69, 0x65, 0x12, 0x24, 0x2e, 0x72, 0x6f, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x2e, 0x6d,
	0x6f, 0x76, 0x69, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f,
	0x76, 0x69, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x72, 0x6f, 0x6b,
	0x65, 0x74, 0x69, 0x6e, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x22, 0x0e,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x3a, 0x01,
	0x2a, 0x92, 0x41, 0x30, 0x0a, 0x05, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x12, 0x0c, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x20, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x1a, 0x19, 0x54, 0x68, 0x69, 0x73, 0x20,
	0x41, 0x50, 0x49, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x6d,
	0x6f, 0x76, 0x69, 0x65, 0x12, 0x9a, 0x01, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x76, 0x69,
	0x65, 0x12, 0x21, 0x2e, 0x72, 0x6f, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x2e, 0x6d, 0x6f, 0x76, 0x69,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x72, 0x6f, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x2e, 0x6d,
	0x6f, 0x76, 0x69, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x47, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10,
	0x12, 0x0e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x73,
	0x92, 0x41, 0x2e, 0x0a, 0x05, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x12, 0x0d, 0x4c, 0x69, 0x73, 0x74,
	0x20, 0x4f, 0x66, 0x20, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x1a, 0x16, 0x54, 0x68, 0x69, 0x73, 0x20,
	0x41, 0x50, 0x49, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x67, 0x65, 0x74, 0x20, 0x6d, 0x6f, 0x76, 0x69,
	0x65, 0x12, 0xa6, 0x01, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x42, 0x79,
	0x49, 0x44, 0x12, 0x19, 0x2e, 0x72, 0x6f, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x2e, 0x6d, 0x6f, 0x76,
	0x69, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x49, 0x44, 0x1a, 0x26, 0x2e,
	0x72, 0x6f, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x53, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x12, 0x12, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x2f, 0x7b, 0x69, 0x64,
	0x7d, 0x92, 0x41, 0x36, 0x0a, 0x05, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x12, 0x0f, 0x47, 0x65, 0x74,
	0x20, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x20, 0x42, 0x79, 0x20, 0x49, 0x44, 0x1a, 0x1c, 0x54, 0x68,
	0x69, 0x73, 0x20, 0x41, 0x50, 0x49, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x67, 0x65, 0x74, 0x20, 0x6d,
	0x6f, 0x76, 0x69, 0x65, 0x20, 0x62, 0x79, 0x20, 0x69, 0x64, 0x12, 0xa3, 0x01, 0x0a, 0x0b, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x12, 0x1b, 0x2e, 0x72, 0x6f, 0x6b,
	0x65, 0x74, 0x69, 0x6e, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f,
	0x76, 0x69, 0x65, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x25, 0x2e, 0x72, 0x6f, 0x6b, 0x65, 0x74, 0x69,
	0x6e, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x50,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x1a, 0x12, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x6d, 0x6f, 0x76, 0x69, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x92, 0x41, 0x30,
	0x0a, 0x05, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x12, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x20,
	0x4d, 0x6f, 0x76, 0x69, 0x65, 0x1a, 0x19, 0x54, 0x68, 0x69, 0x73, 0x20, 0x41, 0x50, 0x49, 0x20,
	0x66, 0x6f, 0x72, 0x20, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x20, 0x6d, 0x6f, 0x76, 0x69, 0x65,
	0x12, 0x93, 0x01, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x69, 0x65,
	0x12, 0x19, 0x2e, 0x72, 0x6f, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x49, 0x44, 0x1a, 0x1a, 0x2e, 0x72, 0x6f,
	0x6b, 0x65, 0x74, 0x69, 0x6e, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x2a,
	0x12, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x2f, 0x7b,
	0x69, 0x64, 0x7d, 0x92, 0x41, 0x30, 0x0a, 0x05, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x12, 0x0c, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x20, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x1a, 0x19, 0x54, 0x68, 0x69,
	0x73, 0x20, 0x41, 0x50, 0x49, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x20, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x42, 0x48, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4b, 0x6b, 0x6d, 0x69, 0x6b, 0x61, 0x7a, 0x65, 0x2f, 0x72, 0x6f,
	0x6b, 0x65, 0x74, 0x69, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x6f, 0x76, 0x69,
	0x65, 0x2f, 0x76, 0x31, 0x3b, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x76, 0x31, 0x92, 0x41, 0x11, 0x12,
	0x0f, 0x0a, 0x05, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x32, 0x06, 0x76, 0x31, 0x2e, 0x30, 0x2e, 0x30,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var file_movie_v1_movie_service_proto_goTypes = []interface{}{
	(*HealthCheckRequest)(nil),   // 0: roketin.movie.v1.HealthCheckRequest
	(*CreateMovieRequest)(nil),   // 1: roketin.movie.v1.CreateMovieRequest
	(*GetMovieRequest)(nil),      // 2: roketin.movie.v1.GetMovieRequest
	(*ParamID)(nil),              // 3: roketin.movie.v1.ParamID
	(*MovieData)(nil),            // 4: roketin.movie.v1.MovieData
	(*HealthCheckResponse)(nil),  // 5: roketin.movie.v1.HealthCheckResponse
	(*Response)(nil),             // 6: roketin.movie.v1.Response
	(*GetMovieResponse)(nil),     // 7: roketin.movie.v1.GetMovieResponse
	(*GetMovieByIDResponse)(nil), // 8: roketin.movie.v1.GetMovieByIDResponse
	(*UpdateMovieResponse)(nil),  // 9: roketin.movie.v1.UpdateMovieResponse
}
var file_movie_v1_movie_service_proto_depIdxs = []int32{
	0, // 0: roketin.movie.v1.MovieService.Check:input_type -> roketin.movie.v1.HealthCheckRequest
	1, // 1: roketin.movie.v1.MovieService.CreateMovie:input_type -> roketin.movie.v1.CreateMovieRequest
	2, // 2: roketin.movie.v1.MovieService.GetMovie:input_type -> roketin.movie.v1.GetMovieRequest
	3, // 3: roketin.movie.v1.MovieService.GetMovieByID:input_type -> roketin.movie.v1.ParamID
	4, // 4: roketin.movie.v1.MovieService.UpdateMovie:input_type -> roketin.movie.v1.MovieData
	3, // 5: roketin.movie.v1.MovieService.DeleteMovie:input_type -> roketin.movie.v1.ParamID
	5, // 6: roketin.movie.v1.MovieService.Check:output_type -> roketin.movie.v1.HealthCheckResponse
	6, // 7: roketin.movie.v1.MovieService.CreateMovie:output_type -> roketin.movie.v1.Response
	7, // 8: roketin.movie.v1.MovieService.GetMovie:output_type -> roketin.movie.v1.GetMovieResponse
	8, // 9: roketin.movie.v1.MovieService.GetMovieByID:output_type -> roketin.movie.v1.GetMovieByIDResponse
	9, // 10: roketin.movie.v1.MovieService.UpdateMovie:output_type -> roketin.movie.v1.UpdateMovieResponse
	6, // 11: roketin.movie.v1.MovieService.DeleteMovie:output_type -> roketin.movie.v1.Response
	6, // [6:12] is the sub-list for method output_type
	0, // [0:6] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_movie_v1_movie_service_proto_init() }
func file_movie_v1_movie_service_proto_init() {
	if File_movie_v1_movie_service_proto != nil {
		return
	}
	file_movie_v1_movie_messages_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_movie_v1_movie_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_movie_v1_movie_service_proto_goTypes,
		DependencyIndexes: file_movie_v1_movie_service_proto_depIdxs,
	}.Build()
	File_movie_v1_movie_service_proto = out.File
	file_movie_v1_movie_service_proto_rawDesc = nil
	file_movie_v1_movie_service_proto_goTypes = nil
	file_movie_v1_movie_service_proto_depIdxs = nil
}
